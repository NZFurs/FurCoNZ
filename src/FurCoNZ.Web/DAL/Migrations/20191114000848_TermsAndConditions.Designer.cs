// <auto-generated />
using System;
using FurCoNZ.Web.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace FurCoNZ.Web.DAL.Migrations
{
    [DbContext(typeof(FurCoNZDbContext))]
    [Migration("20191114000848_TermsAndConditions")]
    partial class TermsAndConditions
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("FurCoNZ.Web.Models.LinkedAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Issuer");

                    b.Property<string>("Subject");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("Issuer", "Subject");

                    b.ToTable("LinkedAccounts");
                });

            modelBuilder.Entity("FurCoNZ.Web.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AmountPaidCents");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<DateTimeOffset?>("ExpiredNotificationSent");

                    b.Property<DateTimeOffset?>("LastReminderSent");

                    b.Property<int>("OrderedById");

                    b.HasKey("Id");

                    b.HasIndex("OrderedById");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("FurCoNZ.Web.Models.OrderAudit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AmountCents");

                    b.Property<int>("OrderId");

                    b.Property<string>("PaymentProvider")
                        .IsRequired();

                    b.Property<string>("PaymentProviderReference")
                        .IsRequired();

                    b.Property<int>("Type");

                    b.Property<DateTimeOffset>("When");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("PaymentProvider", "PaymentProviderReference");

                    b.ToTable("OrderAudits");
                });

            modelBuilder.Entity("FurCoNZ.Web.Models.StripeSession", b =>
                {
                    b.Property<string>("Id");

                    b.Property<int>("OrderId");

                    b.Property<string>("PaymentIntent");

                    b.Property<int>("State");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("PaymentIntent");

                    b.ToTable("StripeSessions");
                });

            modelBuilder.Entity("FurCoNZ.Web.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("AcceptedTermsAndConditions");

                    b.Property<string>("AdditionalNotes");

                    b.Property<string>("Address");

                    b.Property<int?>("AttendeeAccountId");

                    b.Property<string>("CabinGrouping");

                    b.Property<int>("CabinNoisePreference");

                    b.Property<string>("CityTown");

                    b.Property<string>("Country");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("KnownAllergens");

                    b.Property<string>("LegalName");

                    b.Property<int>("MealRequirements");

                    b.Property<int>("OrderId");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("PreferredName");

                    b.Property<string>("PreferredPronouns");

                    b.Property<string>("Suburb");

                    b.Property<string>("TicketName");

                    b.Property<int>("TicketTypeId");

                    b.HasKey("Id");

                    b.HasIndex("AttendeeAccountId");

                    b.HasIndex("OrderId");

                    b.HasIndex("TicketTypeId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("FurCoNZ.Web.Models.TicketType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<bool>("HiddenFromPublic");

                    b.Property<string>("Name");

                    b.Property<int>("PriceCents");

                    b.Property<DateTimeOffset>("SoldOutAt");

                    b.Property<int>("TotalAvailable");

                    b.HasKey("Id");

                    b.ToTable("TicketTypes");
                });

            modelBuilder.Entity("FurCoNZ.Web.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<bool>("IsAdmin")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FurCoNZ.Web.Models.LinkedAccount", b =>
                {
                    b.HasOne("FurCoNZ.Web.Models.User", "User")
                        .WithMany("LinkedAccounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FurCoNZ.Web.Models.Order", b =>
                {
                    b.HasOne("FurCoNZ.Web.Models.User", "OrderedBy")
                        .WithMany()
                        .HasForeignKey("OrderedById")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FurCoNZ.Web.Models.OrderAudit", b =>
                {
                    b.HasOne("FurCoNZ.Web.Models.Order", "Order")
                        .WithMany("Audits")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FurCoNZ.Web.Models.StripeSession", b =>
                {
                    b.HasOne("FurCoNZ.Web.Models.Order", "Order")
                        .WithMany("StripeSessions")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FurCoNZ.Web.Models.Ticket", b =>
                {
                    b.HasOne("FurCoNZ.Web.Models.User", "AttendeeAccount")
                        .WithMany()
                        .HasForeignKey("AttendeeAccountId");

                    b.HasOne("FurCoNZ.Web.Models.Order", "Order")
                        .WithMany("TicketsPurchased")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FurCoNZ.Web.Models.TicketType", "TicketType")
                        .WithMany()
                        .HasForeignKey("TicketTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
